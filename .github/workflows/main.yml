# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x]

    steps:
      - name: Setup repo 🛎
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }} 🏗
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v3.2.2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn --frozen-lockfile

      - name: Lint 👀
        run: yarn lint

      - name: Format 👀
        run: yarn format

      - name: Check Types 👀
        run: yarn lint:types

      - name: Run Build 🚧
        run: yarn build

      - name: Run Tests 🌡
        run: yarn test:coverage

      - name: Upload coverage to Codecov 🌡
        if: "matrix.node-version == '16.x'"
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Create package ⚡
        run: yarn pack

      - name: Upload package 🔥
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: '*.tgz'

      - name: Create Release 🎉
        if: "github.event_name == 'push' && matrix.node-version == '16.x'"
        run: yarn semantic-release --dry-run
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
